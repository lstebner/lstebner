// Generated by CoffeeScript 1.10.0
var MathGenerator, Quiz, _;

_ = require("underscore");

MathGenerator = require("./math_generator.js");

module.exports = Quiz = (function() {
  function Quiz(opts) {
    this.opts = opts != null ? opts : {};
    this.opts = _.extend({
      name: "",
      format: "recall",
      type: "",
      num_questions: 20,
      num_choices: 4,
      question_data: null
    }, this.opts);
    this.questions = [];
    this.selected_choices = [];
    this.setup();
    this.data();
  }

  Quiz.prototype.data = function() {
    return {
      questions: this.questions,
      format: this.opts.format
    };
  };

  Quiz.prototype.setup = function() {
    if (!this.opts.question_data) {
      if (process.env.NODE_ENV !== "test") {
        console.info("no question data, type '" + this.opts.type + "' (ok if expected)");
      }
      return;
    }
    return this.setup_questions();
  };

  Quiz.prototype.setup_questions = function() {
    var all_choices, c, choice, i, j, k, l, len, m, random_choices, ref, ref1, ref2, results, v;
    all_choices = [];
    ref = this.opts.question_data;
    for (j = 0, len = ref.length; j < len; j++) {
      v = ref[j];
      all_choices.push(v[0]);
    }
    results = [];
    for (i = l = 0, ref1 = this.opts.num_questions; 0 <= ref1 ? l < ref1 : l > ref1; i = 0 <= ref1 ? ++l : --l) {
      choice = this.random_choice();
      random_choices = [choice[1]];
      for (k = m = 0, ref2 = this.opts.num_choices - 1; 0 <= ref2 ? m < ref2 : m > ref2; k = 0 <= ref2 ? ++m : --m) {
        c = this.random_choice(false);
        random_choices.push(c[1]);
      }
      random_choices.sort(function(a) {
        if (Math.random() * 9 > 3) {
          return 1;
        } else {
          return -1;
        }
      });
      random_choices.sort(function(a) {
        if (Math.random() * 6 > 3) {
          return 1;
        } else {
          return -1;
        }
      });
      results.push(this.questions.push({
        question: (choice[0] + "=?").replace("==", "="),
        answer: "" + choice[1],
        choices: random_choices
      }));
    }
    return results;
  };

  Quiz.prototype.random_choice = function(unique) {
    var selected_idx;
    if (unique == null) {
      unique = true;
    }
    selected_idx = Math.floor(Math.random() * this.opts.question_data.length);
    if (unique) {
      while ((_.indexOf(this.selected_choices, selected_idx) > -1) && this.selected_choices.length < this.opts.question_data.length - 1) {
        selected_idx = Math.floor(Math.random() * this.opts.question_data.length);
      }
      this.selected_choices.push(selected_idx);
    }
    return this.opts.question_data[selected_idx];
  };

  return Quiz;

})();
