// Generated by CoffeeScript 1.10.0
(function() {
  var AssertServer, assert, fs, res, server, sinon;

  assert = require("assert");

  sinon = require("sinon");

  AssertServer = require("./../class/asset_server.js");

  fs = require("fs");

  res = {
    writeHead: sinon.spy(),
    end: sinon.spy()
  };

  server = null;

  beforeEach(function() {
    return server = new AssertServer(__dirname + "/assets/", res);
  });

  afterEach(function() {
    res.writeHead.reset();
    return res.end.reset();
  });

  describe("AssetServer", function() {
    it("serves a stylesheet", function() {
      server.serve_stylesheet("style.less");
      return assert(res.writeHead.calledWith("200", "Content-Type: text/css"));
    });
    it("serves a coffeescript", function() {
      server.serve_coffeescript("main.coffee");
      return assert(res.writeHead.calledWith("200", "Content-Type: text/javascript"));
    });
    it("serves a javascript", function() {
      server.serve_javascript("test.js");
      return assert(res.writeHead.calledWith("200", "Content-Type: text/javascript"));
    });
    it("serves an image", function() {
      server.serve_image("test.png");
      return assert(res.writeHead.calledWith("200", "Content-Type: text/png"));
    });
    it("404's when an asset is not found", function() {
      server.serve_javascript("whackfilename.js");
      return assert(res.writeHead.calledWith("404"));
    });
    return it("serves coffeescript with replacements", function() {
      var contents;
      contents = fs.readFileSync(__dirname + "/assets/replacements.coffee", "utf8");
      contents = server.process_replacements(contents);
      assert(contents.match(/PREPEND/));
      assert(contents.match(/INSERT/));
      return assert(contents.match(/APPEND/));
    });
  });

}).call(this);
